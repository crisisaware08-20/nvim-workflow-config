# ═══════════════════════════════════════════════════════════
# TMUX Configuration - Neovim-aligned Mental Model
# ═══════════════════════════════════════════════════════════

# ───────────────────────────────────────────────────────────
# PREFIX CONFIGURATION (Like Neovim's Leader)
# ───────────────────────────────────────────────────────────
# Set prefix to \ (backslash) - matching Neovim's leader key
# This creates a unified mental model: \ is the "command" key
unbind C-b
set -g prefix \\
bind \\ send-prefix

# ───────────────────────────────────────────────────────────
# GENERAL SETTINGS
# ───────────────────────────────────────────────────────────
# Enable mouse support
set -g mouse on

# Use 256 colors
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

# Start window numbering at 1 (like Vim tabs)
set -g base-index 1
setw -g pane-base-index 1

# Renumber windows when one is closed
set -g renumber-windows on

# Don't rename windows automatically
set-option -g allow-rename off

# Increase scrollback buffer size
set-option -g history-limit 50000

# Vi mode in copy mode
setw -g mode-keys vi

# No delay for escape key press (important for Vim!)
set -sg escape-time 0

# ───────────────────────────────────────────────────────────
# PANE MANAGEMENT (Like Neovim Windows/Splits)
# ───────────────────────────────────────────────────────────
# Split panes using | and - (intuitive visual)
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# Vim-style pane navigation (with prefix)
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Smart pane switching with awareness of Vim splits
# This makes Ctrl+h/j/k/l work seamlessly between tmux and nvim!
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\S+\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

# Pane resizing (Vim-style with prefix + H/J/K/L)
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Toggle pane zoom (like :only in Vim)
bind z resize-pane -Z

# Close pane (like :q in Vim)
bind q kill-pane

# ───────────────────────────────────────────────────────────
# WINDOW MANAGEMENT (Like Neovim Tabs)
# ───────────────────────────────────────────────────────────
# New window with same path (like :tabnew)
bind c new-window -c "#{pane_current_path}"

# Quick window selection (like gt/gT in Vim)
bind -r n next-window
bind -r p previous-window

# Move windows left/right
bind -r "<" swap-window -t -1 -d
bind -r ">" swap-window -t +1 -d

# List windows (like :tabs in Vim)
bind w choose-window

# Kill window (like :tabclose)
bind Q kill-window

# ───────────────────────────────────────────────────────────
# SESSION MANAGEMENT (Unique to tmux)
# ───────────────────────────────────────────────────────────
# Session navigation
bind s choose-session
bind S command-prompt -p "New session:" "new-session -s '%%'"

# Detach session (save & exit)
bind d detach-client

# ───────────────────────────────────────────────────────────
# COPY MODE (Vi-like)
# ───────────────────────────────────────────────────────────
# Enter copy mode (like Visual mode in Vim)
bind [ copy-mode
bind Escape copy-mode

# Vi-style copy/paste
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind -T copy-mode-vi r send-keys -X rectangle-toggle

# Paste (like p in Vim)
bind p paste-buffer

# ───────────────────────────────────────────────────────────
# QUICK RELOAD & HELP
# ───────────────────────────────────────────────────────────
# Reload config (like :source $MYVIMRC)
bind r source-file ~/.tmux.conf \; display-message "Config reloaded!"

# Show keybindings
bind ? list-keys

# ───────────────────────────────────────────────────────────
# STATUS BAR (Clean & Minimal)
# ───────────────────────────────────────────────────────────
set -g status-position bottom
set -g status-bg colour234
set -g status-fg colour137
set -g status-left ''
set -g status-right '#[fg=colour233,bg=colour241,bold] %d/%m #[fg=colour233,bg=colour245,bold] %H:%M '
set -g status-right-length 50
set -g status-left-length 20

setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

# ───────────────────────────────────────────────────────────
# ADDITIONAL VIM-LIKE FEATURES
# ───────────────────────────────────────────────────────────
# Enter command mode easily (like : in Vim)
bind : command-prompt

# Search in copy mode (like / in Vim)
bind / copy-mode \; send-keys "/"
